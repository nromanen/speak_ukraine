name: Running Tests

on: [push]

permissions:
  checks: write

jobs:
  Test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: mypass
          POSTGRES_USER: myuser
          POSTGRES_DB: example

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      # run steps required in the workflow
      - run: |
          sudo apt-get update && sudo apt-get install --yes --no-install-recommends postgresql-client
      - run: |
          psql -h localhost -U myuser -d example -c 'create table categories (id bigserial primary key, avatar varchar not null, title varchar not null);'
        env:
          PGPASSWORD: mypass
      - uses: actions/checkout@v4
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with Maven
        run: mvn clean test && mvn jacoco:report && pwd && ls -lah && ls -lah target/site/jacoco && ls -lah ${{ github.workspace }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/target/surefire-reports/TEST-*.xml'
      - name: Upload Jacoco Report
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: jacoco-report
          path: '**/target/site/jacoco/'
      - name: Upload Report
        uses: 'actions/upload-artifact@v2'
        if: success() || failure()
        with:
          name: jacoco-report
          path: ${{ github.workspace }}/target/site/jacoco/jacoco.xml

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.2
        if: success() || failure()
        with:
          paths: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          title: Code Coverage

      - name: Save Coverage To Environment Variable
        run: |
          echo "TOTAL_COVERAGE=${{ steps.jacoco.outputs.coverage-overall }}" >> $GITHUB_ENV
          echo "CHANGED_FILES_COVERAGE=${{ steps.jacoco.outputs.coverage-changed-files }}" >> $GITHUB_ENV

      - name: Print & Check Coverage Info
        run: |
          import os
          import sys
          print("Total Coverage: " + str(os.environ["TOTAL_COVERAGE"]))
          print("Changed Files Coverage: " + str(os.environ["CHANGED_FILES_COVERAGE"]))
          if float(os.environ["TOTAL_COVERAGE"]) < 80 or float(os.environ["CHANGED_FILES_COVERAGE"]) < 80:
            print("Insufficient Coverage!")
            sys.exit(-1) # Cause Status Check Failure due to noncompliant coverage
          sys.exit(0)
        shell: python
      - name: Publish test coverage results
        uses: PavanMudigonda/jacoco-reporter@v4.8
        if: success() || failure()
        with:
          coverage_results_path: 'target/site/jacoco/jacoco.xml'
          coverage_report_title: 'Test coverage results'
          coverage_report_name: 'Test coverage results'
          github_token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Set up Node.js 14.x
#        uses: actions/setup-node@v1
#        with:
#          node-version: 14.x
#
#      - name: Install dependencies
#        run: npm install
#
#      - name: migrate database
#        run: node migrate.js
#        env:
#          DBURL: "postgres://postgres:postgres@localhost:5432/postgres"
#
#      - name: Run the mock tests function
#        run: node getuser.js
#        env:
#          DBURL: postgres://postgres:postgres@localhost:5432/postgres
